<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sts.dao.OrdersMapper" >
  <resultMap id="BaseResultMap" type="com.sts.model.Orders" >
    <id column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="good_id" property="goodId" jdbcType="INTEGER" />
    <result column="seller_id" property="sellerId" jdbcType="INTEGER" />
    <result column="buyNum" property="buynum" jdbcType="INTEGER" />
    <result column="totalPrice" property="totalprice" jdbcType="DOUBLE" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="meet_time" property="meetTime" jdbcType="TIMESTAMP" />
    <result column="meet_address" property="meetAddress" jdbcType="VARCHAR" />
    <result column="evaluation_info" property="evaluationInfo" jdbcType="VARCHAR" />
    <result column="evaluation_grade" property="evaluationGrade" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    order_id, user_id, good_id, seller_id, buyNum, totalPrice, create_time, meet_time, 
    meet_address, evaluation_info, evaluation_grade
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sts.model.OrdersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from orders
    where order_id = #{orderId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from orders
    where order_id = #{orderId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.sts.model.OrdersExample" >
    delete from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sts.model.Orders" >
    insert into orders (order_id, user_id, good_id, 
      seller_id, buyNum, totalPrice, 
      create_time, meet_time, meet_address, 
      evaluation_info, evaluation_grade)
    values (#{orderId,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{goodId,jdbcType=INTEGER}, 
      #{sellerId,jdbcType=INTEGER}, #{buynum,jdbcType=INTEGER}, #{totalprice,jdbcType=DOUBLE}, 
      #{createTime,jdbcType=TIMESTAMP}, #{meetTime,jdbcType=TIMESTAMP}, #{meetAddress,jdbcType=VARCHAR}, 
      #{evaluationInfo,jdbcType=VARCHAR}, #{evaluationGrade,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sts.model.Orders" >
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="goodId != null" >
        good_id,
      </if>
      <if test="sellerId != null" >
        seller_id,
      </if>
      <if test="buynum != null" >
        buyNum,
      </if>
      <if test="totalprice != null" >
        totalPrice,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="meetTime != null" >
        meet_time,
      </if>
      <if test="meetAddress != null" >
        meet_address,
      </if>
      <if test="evaluationInfo != null" >
        evaluation_info,
      </if>
      <if test="evaluationGrade != null" >
        evaluation_grade,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="goodId != null" >
        #{goodId,jdbcType=INTEGER},
      </if>
      <if test="sellerId != null" >
        #{sellerId,jdbcType=INTEGER},
      </if>
      <if test="buynum != null" >
        #{buynum,jdbcType=INTEGER},
      </if>
      <if test="totalprice != null" >
        #{totalprice,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="meetTime != null" >
        #{meetTime,jdbcType=TIMESTAMP},
      </if>
      <if test="meetAddress != null" >
        #{meetAddress,jdbcType=VARCHAR},
      </if>
      <if test="evaluationInfo != null" >
        #{evaluationInfo,jdbcType=VARCHAR},
      </if>
      <if test="evaluationGrade != null" >
        #{evaluationGrade,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sts.model.OrdersExample" resultType="java.lang.Integer" >
    select count(*) from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update orders
    <set >
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.goodId != null" >
        good_id = #{record.goodId,jdbcType=INTEGER},
      </if>
      <if test="record.sellerId != null" >
        seller_id = #{record.sellerId,jdbcType=INTEGER},
      </if>
      <if test="record.buynum != null" >
        buyNum = #{record.buynum,jdbcType=INTEGER},
      </if>
      <if test="record.totalprice != null" >
        totalPrice = #{record.totalprice,jdbcType=DOUBLE},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.meetTime != null" >
        meet_time = #{record.meetTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.meetAddress != null" >
        meet_address = #{record.meetAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.evaluationInfo != null" >
        evaluation_info = #{record.evaluationInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.evaluationGrade != null" >
        evaluation_grade = #{record.evaluationGrade,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update orders
    set order_id = #{record.orderId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      good_id = #{record.goodId,jdbcType=INTEGER},
      seller_id = #{record.sellerId,jdbcType=INTEGER},
      buyNum = #{record.buynum,jdbcType=INTEGER},
      totalPrice = #{record.totalprice,jdbcType=DOUBLE},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      meet_time = #{record.meetTime,jdbcType=TIMESTAMP},
      meet_address = #{record.meetAddress,jdbcType=VARCHAR},
      evaluation_info = #{record.evaluationInfo,jdbcType=VARCHAR},
      evaluation_grade = #{record.evaluationGrade,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sts.model.Orders" >
    update orders
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="goodId != null" >
        good_id = #{goodId,jdbcType=INTEGER},
      </if>
      <if test="sellerId != null" >
        seller_id = #{sellerId,jdbcType=INTEGER},
      </if>
      <if test="buynum != null" >
        buyNum = #{buynum,jdbcType=INTEGER},
      </if>
      <if test="totalprice != null" >
        totalPrice = #{totalprice,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="meetTime != null" >
        meet_time = #{meetTime,jdbcType=TIMESTAMP},
      </if>
      <if test="meetAddress != null" >
        meet_address = #{meetAddress,jdbcType=VARCHAR},
      </if>
      <if test="evaluationInfo != null" >
        evaluation_info = #{evaluationInfo,jdbcType=VARCHAR},
      </if>
      <if test="evaluationGrade != null" >
        evaluation_grade = #{evaluationGrade,jdbcType=INTEGER},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sts.model.Orders" >
    update orders
    set user_id = #{userId,jdbcType=INTEGER},
      good_id = #{goodId,jdbcType=INTEGER},
      seller_id = #{sellerId,jdbcType=INTEGER},
      buyNum = #{buynum,jdbcType=INTEGER},
      totalPrice = #{totalprice,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      meet_time = #{meetTime,jdbcType=TIMESTAMP},
      meet_address = #{meetAddress,jdbcType=VARCHAR},
      evaluation_info = #{evaluationInfo,jdbcType=VARCHAR},
      evaluation_grade = #{evaluationGrade,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
</mapper>